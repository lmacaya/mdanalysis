# config based on examples from SciPy & NumPy repositories, which
# themselves credit an original example by Olivier Grisel at
# https://github.com/ogrisel/python-appveyor-demo/blob/master/appveyor.yml
clone_depth: 50
max_jobs: 100

cache:
    - '%LOCALAPPDATA%\pip\Cache'

matrix:
    # FIXME: allow all Windows builds
    # to fail for now; remove this
    # when we have full Windows compatibility
    allow_failures:
      - PYTHON_ARCH: 64

image:
    - Visual Studio 2015

environment:
    global:
        MINGW_64: C:\mingw-w64\x86_64-6.3.0-posix-seh-rt_v5-rev1\mingw64\bin
        OPENBLAS_64: https://3f23b170c54c2533c070-1c8a9b3114517dc5fe17b7c3f8c63a43.ssl.cf2.rackcdn.com/openblas-5f998ef_gcc7_1_0_win64.zip
        APPVEYOR_SAVE_CACHE_ON_ERROR: true
        APPVEYOR_SKIP_FINALIZE_ON_EXIT: true
        TEST_TIMEOUT: 1000

    matrix:

        - PYTHON: C:\Python27-x64
          PYTHON_VERSION: 2.7
          PYTHON_ARCH: 64

        - PYTHON: C:\Python36-x64
          PYTHON_VERSION: 3.6
          PYTHON_ARCH: 64

init:
    - "ECHO %PYTHON% %PYTHON_VERSION% %PYTHON_ARCH%"
    - "ECHO \"%APPVEYOR_SCHEDULED_BUILD%\""
    # cancel build if newer one is submitted; complicated
    # details for getting this to work are credited to JuliaLang
    # developers
    - ps: if ($env:APPVEYOR_PULL_REQUEST_NUMBER -and $env:APPVEYOR_BUILD_NUMBER -ne ((Invoke-RestMethod `
        https://ci.appveyor.com/api/projects/$env:APPVEYOR_ACCOUNT_NAME/$env:APPVEYOR_PROJECT_SLUG/history?recordsNumber=50).builds | `
        Where-Object pullRequestId -eq $env:APPVEYOR_PULL_REQUEST_NUMBER)[0].buildNumber) { `
          raise "There are newer queued builds for this pull request, skipping build."
        }

install:
    # set up a conda env
    - "git clone --depth 1 git://github.com/astropy/ci-helpers.git"
    - "powershell ci-helpers/appveyor/install-miniconda.ps1"
    - "SET PATH=%PYTHON%;%PYTHON%\Scripts;%PATH%"
    - "activate test"
    # only using 64 bit at the moment, but use
    # the same setup approach as NumPy / SciPy
    - if [%PYTHON_ARCH%]==[64] SET PATH=%MINGW_64%;%PATH% & SET OPENBLAS=%OPENBLAS_64%
    - python --version
    - >-
       %CMD_IN_ENV%
       python -c "import sys,platform,struct;
       print(sys.platform, platform.machine(), struct.calcsize('P') * 8, )"

    # use conda to install dependencies
    - 'conda install pip setuptools wheel cython mock six biopython networkx joblib matplotlib scipy vs2015_runtime pytest'

build_script:
    - ps: cd package
    - ps: python setup.py install --user

test_script:
    - ps: cd testsuite
    - ps: cd MDAnalysisTests
    - ps: pytest

after_build:
    # cache cleanup
    - C:\cygwin\bin\find "%LOCALAPPDATA%\pip" -type f -mtime +360 -delete
    - C:\cygwin\bin\find "%LOCALAPPDATA%\pip" -type f -size +10M -delete
    - C:\cygwin\bin\find "%LOCALAPPDATA%\pip" -empty -delete
    # Show size of cache
    - C:\cygwin\bin\du -hs "%LOCALAPPDATA%\pip\Cache"
